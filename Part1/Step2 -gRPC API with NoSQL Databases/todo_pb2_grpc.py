# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import todo_pb2 as todo__pb2


class TodosServiceStub(object):
  """Service. define the methods that the grpc server can expose to the client.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.List = channel.unary_unary(
        '/myTodos.TodosService/List',
        request_serializer=todo__pb2.Empty.SerializeToString,
        response_deserializer=todo__pb2.TodoList.FromString,
        )
    self.Insert = channel.unary_unary(
        '/myTodos.TodosService/Insert',
        request_serializer=todo__pb2.Todo.SerializeToString,
        response_deserializer=todo__pb2.Empty.FromString,
        )
    self.Get = channel.unary_unary(
        '/myTodos.TodosService/Get',
        request_serializer=todo__pb2.TodoId.SerializeToString,
        response_deserializer=todo__pb2.TodoList.FromString,
        )
    self.Remove = channel.unary_unary(
        '/myTodos.TodosService/Remove',
        request_serializer=todo__pb2.TodoId.SerializeToString,
        response_deserializer=todo__pb2.Empty.FromString,
        )
    self.Update = channel.unary_unary(
        '/myTodos.TodosService/Update',
        request_serializer=todo__pb2.Todo.SerializeToString,
        response_deserializer=todo__pb2.Empty.FromString,
        )


class TodosServiceServicer(object):
  """Service. define the methods that the grpc server can expose to the client.
  """

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Insert(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Remove(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Update(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TodosServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=todo__pb2.Empty.FromString,
          response_serializer=todo__pb2.TodoList.SerializeToString,
      ),
      'Insert': grpc.unary_unary_rpc_method_handler(
          servicer.Insert,
          request_deserializer=todo__pb2.Todo.FromString,
          response_serializer=todo__pb2.Empty.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=todo__pb2.TodoId.FromString,
          response_serializer=todo__pb2.TodoList.SerializeToString,
      ),
      'Remove': grpc.unary_unary_rpc_method_handler(
          servicer.Remove,
          request_deserializer=todo__pb2.TodoId.FromString,
          response_serializer=todo__pb2.Empty.SerializeToString,
      ),
      'Update': grpc.unary_unary_rpc_method_handler(
          servicer.Update,
          request_deserializer=todo__pb2.Todo.FromString,
          response_serializer=todo__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'myTodos.TodosService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
